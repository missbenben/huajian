@using TS.Core.Domain.Projects
@using TS.Data.Extensions
@model TS.Web.Models.BimModel.ModelDetailModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1,user-scalable=0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,Chrome=1" />
    <title>模型</title>
    <link rel="stylesheet" href="~/Content/lib/bootstrap/css/bootstrap.css">
    <link rel="stylesheet" href="~/Content/css/iconfont.css">
    <link rel="stylesheet" href="~/Content/css/HJcommon.css">
    <link rel="stylesheet" href="~/Content/css/header.css">
    <link rel="stylesheet" href="~/Content/css/popUp.css">
    <link rel="stylesheet" href="~/Content/css/login.css">
    <link rel="stylesheet" href="~/Content/css/professionalAuditList.css">
    <link rel="stylesheet" href="~/Content/css/intoModel.css">
    <!--  注意  要在http形式下打开 页面 才能正常使用下面两个文件-->
    <!--[if lt IE 9]>
        <script src="~/Content/lib/html5shiv/html5shiv.min.js"></script>
        <script src="~/Content/lib/respond/respond.js"></script>
    <![endif]-->
    <script src="~/Content/lib/jquery/jquery.js"></script>
    <script src="~/Content/lib/bootstrap/js/bootstrap.js"></script>
    <script src="~/Content/js/selectCommon.js"></script>
    <script src="~/Content/js/loading.js"></script>
    <script src="~/Content/js/common.js"></script>
    <script src="~/Content/js/popUp.js"></script>
</head>
<body>
    <div class="model-header">
        <div class="top clearfix">
            <div class="title pull-left">
                <div class="topName">
                    @Model.ProjectName
                </div>
                <div class="character">
                    <ul>
                        @if (Model.CurrentCustomer.CurrentRole != null && Model.CurrentCustomer.CurrentRole != Role.DesignCompanyManager && Model.CurrentCustomer.CurrentRole != Role.BuildingCompanyManager)
                        {
                            <li>项目经理：@Model.ProjectManagerName</li>
                        }
                        <li id="currentRole"></li>
                        <li id="currentStatus"></li>
                    </ul>
                </div>
            </div>
            <div class="views-btn pull-right">
                <div id="statusbox" class="statusbox">

                </div>
                <div class="select clearfix">
                    <select id="activityRoles">
                        @foreach (var r in Model.AvailableRoles)
                        {
                            <option value="@r.Value">@r.Text</option>
                        }
                    </select>
                </div>
                <div class="select clearfix">
                    <select id="modelprofession" name="modelprofession">
                        @foreach (var p in Model.ModelProfessions)
                        {
                            <option value="@p.Value">@p.Text</option>
                        }
                    </select>
                </div>
                <input name="roleid" id="roleid" type="hidden" value="0" />
            </div>
        </div>
    </div>

    <div class="model-box">
        <div class="modelcon">
            <div id="bimiframe" style="width: 100%;">
                <iframe style="width: 100%; height: 100%" id="iframemodel" src="~/Bimcomposer/index.html?projectId=@Model.ProjectGuid&model=@Model.ModelGuid"></iframe>
            </div>
        </div>
        <div class="spread-btn">
            <img src="/Content/image/ICON_BIMJIANTOU1.png" alt="" class="show-view-card">
            <div>意见卡</div>
        </div>
        <div class="viewlistBox">
            <div class="view-lists-main">
                <div class="search-input clearfix">
                    <div class="operatorBtn">

                    </div>

                    <div class="text">
                        <input id="searchCommentsText" type="text" placeholder="输入意见关键字…">
                        <div id="searchComments" class="search-btn">
                            <img src="~/Content/image/ICON_SOUSUO.png" alt="">
                        </div>
                    </div>
                </div>

                <div id="commentList" class="view-lists-iterm">

                </div>

            </div>
        </div>
        <!--左侧菜单栏-->
        <div class="menu-bar clearfix">
            <div class="menu-classification pull-left">
                <ul>
                    <li id="model-tree-tab">模型树</li>
                    <li id="model-viewPoint-tab">视点</li>
                    <li>2D/3D</li>
                    <li>属性</li>
                </ul>
                <div class="pack-up">收起</div>
            </div>
            <!--模型树-->
            <div class="menu-content model-tree-content pull-left">
            </div>
            <!--视点-->
            <div class="menu-content point-view pull-left">
                <div class="operation-btn">
                    <ul class="clearfix">
                        <li class="increase">
                            <div class="icon"></div>
                            <span>新增</span>
                        </li>
                        <li class="update">
                            <div class="icon"></div>
                            <span>更新</span>
                        </li>
                        <li class="delete">
                            <div class="icon"></div>
                            <span>删除</span>
                        </li>
                        <li class="default">
                            <div class="icon"></div>
                            <span>默认</span>
                        </li>
                    </ul>
                </div>
                <div class="all">
                    <div class="form-group">
                        <div class="form-controls">
                            <div class="select-control">
                                <div class="control select-input">全部</div>
                                <img src="~/Content/image/ICON_XIAOJIANTOU.png" alt="">
                            </div>
                        </div>
                        <div class="select-lists">
                            <ul>
                                <li>33232</li>
                                <li>323</li>
                                <li>333</li>
                                <li>333</li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="label-con clearfix">
                    <div class="check pull-left">
                        <input type="checkbox">
                        <span>标签</span>
                    </div>
                    <div class="form-group pull-right">
                        <div class="form-controls">
                            <div class="select-control">
                                <div class="control select-input">全部</div>
                                <img src="~/Content/image/ICON_XIAOJIANTOU.png" alt="">
                            </div>
                        </div>
                        <div class="select-lists">
                            <ul>
                                <li>33232</li>
                                <li>323</li>
                                <li>333</li>
                                <li>333</li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="point-view-table">
                    <table cellpadding="0" cellspacing="0" class="table">
                        <thead>
                            <tr>
                                <th></th>
                                <th>缩略图</th>
                                <th>名称</th>
                                <th>创建者</th>
                            </tr>
                        </thead>
                        <tbody id="viewPoints">
                            <tr>
                                <td><input type="checkbox"></td>
                                <td>「三维」</td>
                                <td>「三维」</td>
                                <td>hcndk</td>
                            </tr>
                            <tr>
                                <td><input type="checkbox"></td>
                                <td>「三维」</td>
                                <td>「三维」</td>
                                <td>hcndk</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <!--2,3D-->
            <div class="menu-content pull-left"></div>
            <!--属性-->
            <div class="menu-content attributes pull-left">
                <div class="ui-tabview-nav">
                    <ul class="clearfix">
                        <li>属性</li>
                    </ul>
                </div>
                <!--属性-->
                <div class="ui-tabview-panels ui-tabview">
                    <table cellspacing="0" cellpadding="0" width="100%">
                        <thead>
                            <tr>
                                <th>名称</th>
                                <th>属性</th>
                            </tr>
                        </thead>
                    </table>
                    <div class="ui-datatable-scrollable-body">
                        <table cellspacing="0" cellpadding="0" width="100%" class="ui-datatable-data">
                            <tbody id="element-property-content">
                                <tr>
                                    <td>分析属性</td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>分析构造</td>
                                    <td>无</td>
                                </tr>
                                <tr>
                                    <td>可见光透过率</td>
                                    <td>0.000001</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <!--底部工具栏-->
        <div class="ui-toolbar">
            <ul class="clearfix">
                <li class="sectioning toolbarLi">
                    <div data-type="sectioning-on-off" class="icon btn-bim-botton"></div>
                    <div class="ui-button">
                        <span>剖切</span>
                        <span> <i class="iconfont icon-arrLeft-fill"></i></span>
                    </div>
                    <ul class="ui-menu-list">
                        <li data-type="sectioning-reset" class="btn-bim-botton sectioning-reset"><span>重置剖切框</span></li>
                        <li data-type="sectioning-hide" class="btn-bim-botton sectioning-hide"><span>隐藏剖切框</span></li>
                        <li data-type="sectioning-select" class="btn-bim-botton">
                            <input id="sectioning-select" type="checkbox">
                            <label for="sectioning-select"><span>选择剖切框</span></label>
                        </li>
                    </ul>
                </li>
                <li class="roam toolbarLi">
                    <div data-type="roam-on-off" class="icon btn-bim-botton" ></div>
                    <div class="ui-button">
                        <span>漫游</span>
                        <span> <i class="iconfont icon-arrLeft-fill"></i></span>
                    </div>
                    <ul class="ui-menu-list">
                        <li data-type="roam-gravity" class="btn-bim-botton">
                            <input id="roam-gravity" type="checkbox">
                            <label for="roam-gravity"><span>重力</span></label>
                        </li>
                        <li data-type="roam-collide" class="btn-bim-botton">
                            <input id="roam-collide" type="checkbox">
                            <label for="roam-collide"><span>碰撞</span></label>
                        </li>
                    </ul>
                </li>
                <li class="measure toolbarLi">
                    <div data-type="measure-on-off" class="icon btn-bim-botton"></div>
                    <div class="ui-button">
                        <span>测量</span>
                    </div>
                </li>
            </ul>
        </div>
    </div>

    <input name="commentId" id="commentId" type="hidden" value="0" />

    @Html.Partial("_AddOrUpdateComment", Model)

    <div class="wrap"></div>

    <div class="popUp">
        <div class="common-popUp operatePrompt">
            <div class="addProfession-popUp-con">
                <img src="~/Content/image/ICON_GUANBI.png" alt="" class="close-icon">
                <div class="title"></div>
                <div class="confirm-box">
                    <div class="confirm-btn">确认</div>
                    <div class="cancle-btn">取消</div>
                </div>
            </div>
        </div>
        <div class="dynamic">

        </div>

    </div>

    @Html.Partial("_RejectComment", Model)

    <div class="err-prompt"></div>

    <!--新增视点弹出框-->
    <div class="popUp">
        <div class="common-popUp increase-point-view">
            <div class="addProfession-popUp-con">
                <img src="~/Content/image/ICON_GUANBI.png" alt="" class="close-icon">
                <div class="title">新增视点</div>
                <div class="choose-person">
                    <div class="form-group">
                        <label for="point-view-name" class="prompt">视点名称</label>
                        <div class="form-controls">
                            <input id="point-view-name" type="text" class="control" placeholder="请输入视点类别">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="view-type" class="prompt">视点类别</label>
                        <div class="form-controls">
                            <div class="select-control">
                                <input id="view-type" type="text" class="control select-input" placeholder="请选择视点类别" readonly>
                                <img src="~/Content/image/ICON_XIAOJIANTOU.png" alt="">
                                <div class="error-reminder"></div>
                            </div>
                        </div>
                        <div class="select-lists">
                            <ul>
                                <li>33</li>
                                <li>33</li>
                                <li>33</li>
                                <li>33</li>
                            </ul>
                        </div>
                    </div>
                    <div class="textarea">
                        <textarea placeholder="请输入对视点的描述..."></textarea>
                    </div>
                </div>
                <div class="confirm-box">
                    <div class="confirm-btn">是</div>
                    <div class="cancle-btn">否</div>
                </div>
            </div>
        </div>
    </div>

    <div class="loadingWrap"></div>
    <div class="Loading">
        <img src="~/Content/image/loading.gif" height="32" width="32" />
    </div>

    <!--意见-->
    <script>
        var html = $("#statusbox").html();
        //新增意见data
        var addNewCommentModel = {
            RoleId: $('#activityRoles').val(),
            Comment: {
                Id: "0",
                Description: "",
                ProfessionId: "",
                Floor: "",
                CommentTypeId: "",
                EngineeringFileId: "@Model.EngineeringFile.Id",
                CreateVersionId: "@Model.CurrentFileVersionId"
            },
            BIMElements: []
        };

        //搜索意见data
        var searchCommentsData = {
            //pageIndex: 1,
            //pageSize: 10,
            roleId: $('#activityRoles').val(),
            keyword: "",
            searchModelFileVersionId: @Model.CurrentFileVersionId,
            searchProfessionId: "0"
        }

        var searchCurrentRoleData = {
            roleId: $('#activityRoles').val(),
            fileVersionId: @Model.CurrentFileVersionId,
            professionId: $('#modelprofession').val()
        }

        //获取可用角色
        function getAvailableRoles() {
            var url = "@Url.Action("GetAvailableRoles", "BimModel")";
            searchCurrentRoleData.roleId = $('#activityRoles').val();
            searchCurrentRoleData.professionId = $('#modelprofession').val();

            ajaxGetPageData(url, searchCurrentRoleData, function (data) {
                $('#activityRoles').html("");
                //console.log(data);
                for(var i= 0;i<data.length;i++)
                {
                    var option = "<option value=\"" + data[i].Value + "\">" + data[i].Text + "</option>";
                    $('#activityRoles').append(option);
                }
            });
        }

        //更新副标题栏的并更换按钮
        function getOperationButton() {
            var url = "@Url.Action("GetOperationButton", "BimModel")";
            searchCurrentRoleData.roleId = $('#activityRoles').val();
            searchCurrentRoleData.professionId = $('#modelprofession').val();

            ajaxGetPageData(url, searchCurrentRoleData, function (data) {
                if (!data.result) {
                    errPromot(data.errmsg);
                } else {
                    $('#statusbox').empty();
                    $('#statusbox').append(data.listHtml);
                    //重新显示角色
                    $('#currentRole').html(data.roleName);
                    $('#currentStatus').html(data.currentStatus);
                    //重新纪录右上角按钮
                    html = $("#statusbox").html();
                }
            });
        };

        //获取意见数据
        //getCommentsData();
        function getCommentsData() {
            var url = "@Url.Action("GetComments", "BimModel")";
            searchCommentsData.searchProfessionId = $('#modelprofession').val();

            ajaxGetPageData(url, searchCommentsData, function (data) {
                if (!data.result) {
                    errPromot(data.errmsg);
                } else {
                    $('#commentList').empty();
                    $('#commentList').append(data.listHtml);

                    $(".update_a").unbind();

                    //$("#return-comment").unbind();
                }
            });
        };

        //搜索意见列表
        $('#searchComments').click(function() {
            searchCommentsData.keyword = $('#searchCommentsText').val(),
                getCommentsData();
        });

        //专业级操作按钮弹框
        $("#statusbox").on("click", ".profession-Operation a", function () {
            var uri = $(this).attr("data-uri");
            var des = $(this).attr("data-des");
            var fileVersionId = "@Model.CurrentFileVersionId";
            var professionId = $('#modelprofession').val();

            if (des == "" || des == null)
                des = "确认进行此操作？";

            uri += "?" + "fileVersionId=" + fileVersionId + "&professionId=" + professionId;

            operatePrompt(des,
                uri,
                function (data) {
                    errPromot(data.Message);
                    getOperationButton();
                    getCommentsData();
                    console.log(data.Message);
                });
        });

        //批量操作
        $("#statusbox").on("click", ".bulkOperation", function () {
            var des = "确认进行此批量操作？";
            var uri = "@Url.Action("BulkOperation","Comment")";

            var ids = "";
            $(".selectedComment:checked").each(function(){
                ids += $(this).val() + ",";
            });

            ids = ids.substring(0, ids.length-1);

            if (ids == "" || ids == null) {
                alert("请勾选意见！");
                return false;
            }

            uri += "?strCommentIds=" + ids;
            uri +=  "&type=" + $(this).attr("data-type");

            operatePrompt(des,
                uri,
                function (data) {
                    if (!data.result) {
                        //loadingSuccess();
                        errPromot("操作失败");
                        getCommentsData();
                        getOperationButton();
                    } else {
                        //loadingSuccess();
                        errPromot("成功");
                        getCommentsData();
                        getOperationButton();
                    }
                });
        });

        //function myOperatePrompt(con, uri,callback) {
        //    $(".wrap").show();
        //    setDivCenter(".myOperatePrompt");
        //    $("body").css({
        //        'overflow': 'hidden'
        //    });
        //    $(".myOperatePrompt .title").html(con);
        //    $(".myOperatePrompt .confirm-btn").removeClass("sent");
        //    $(".myOperatePrompt .confirm-btn").unbind();
        //    $(".myOperatePrompt .confirm-btn").attr("data-uri", uri);
        //    $(".myOperatePrompt").on("click", ".confirm-btn", function () {
        //        $(".wrap").hide();
        //        $(".common-popUp").hide();
        //        $(".audit-status-popup").hide();
        //        $("body").css({
        //            'overflow': 'auto'
        //        });
        //    });
        //    $(".myOperatePrompt").on("click", ".confirm-btn", function () {
        //        if ($(this).hasClass("sent"))
        //            return false;

        //        $(this).addClass("sent");
        //        $.ajax({
        //            async: false,
        //            type: "POST",
        //            url: $(this).attr("data-uri"),
        //            success: callback,
        //            error: function () {
        //                errPromot("操作失败");
        //            },
        //            beforeSend: function () {
        //                loading();
        //            },
        //            complete: function () {
        //                loadingSuccess();
        //            }
        //        });
        //    });
        //}

    </script>

    <!--Bim引擎相关交互-->
    <script>
        //添加批注
        $("#addAnnotation").click(function () {

            //关掉新建意见的弹框
            $('#add-comment-cancle').click();
            alert("请在模型操作界面点击左键以确定视角，然后开始标注");
            //开启Bim批注
            //$("#iframemodel").contents().find(".ui-annotation-button[_ngcontent-c17]")[0].click();//粗暴的方法
            window.BIMe.view.BIMeAnnotation.getAnnotationPosition().then(function(position) {
                var modelId = '@Model.ModelGuid';
                var annotationName = Date.parse(new Date());
                var viewId = window.BIMe.modelData.BIMeModelData.currentViewId();
                var annotationCategory = '';
                var annotationDescription = '';
                //页面进入等待
                loading();
                window.BIMe.view.BIMeAnnotation.addAnnotation(modelId, annotationName, viewId, annotationCategory,annotationDescription, position).then(function(annotation){
                    //console.log(annotation);
                    var html = '<li class="markList"><a href="javascript:void(0);" onclick="viewAnnotation(\'' + annotation.ID + '\');"><img src="' + annotation.Snapshot + '" alt="' + annotation.ID + '" class="mark-img"></a><img src="/Content/image/ICON_DELETE.png" alt="" class="delete"></li>';
                    $(html).insertBefore('#addAnnotation');
                    $(".wrap").show();
                    $(".newComment").show();
                    loadingSuccess();

                    var HDimgurl = api.resource.getViewpointSnapshot(annotation.ID);
                    addNewCommentModel.BIMElements.push({
                        Id: "0",
                        BIMElementType: "0",
                        IsDelete: "0",
                        BIMId: annotation.ID,
                        BimThumb: annotation.Snapshot,
                        HDBimThumbUrl: HDimgurl
                    });
                });
            });
        });

        //驳回时添加批注
        $("#addRejectAnnotation").click(function () {
            //隐藏弹框
            $(".wrap").hide();
            $(".rejectComment").hide();
            alert("请在模型操作界面点击左键以确定视角，然后开始标注");

            //开启Bim批注
            //$("#iframemodel").contents().find(".ui-annotation-button[_ngcontent-c17]")[0].click();//粗暴的方法
            window.BIMe.view.BIMeAnnotation.getAnnotationPosition().then(function(position) {
                var modelId = '@Model.ModelGuid';
                var annotationName = Date.parse(new Date());
                var viewId = window.BIMe.modelData.BIMeModelData.currentViewId();
                var annotationCategory = '';
                var annotationDescription = '';
                //页面进入等待
                loading();
                window.BIMe.view.BIMeAnnotation.addAnnotation(modelId, annotationName, viewId, annotationCategory,annotationDescription, position).then(function(annotation){
                    //console.log(annotation);
                    var html = '<li class="markList"><a href="javascript:void(0);" onclick="viewAnnotation(\'' + annotation.ID + '\');"><img src="' + annotation.Snapshot + '" alt="' + annotation.ID + '" class="mark-img"></a><img src="/Content/image/ICON_DELETE.png" alt="" class="delete"></li>';
                    $(html).insertBefore('#addRejectAnnotation');
                    $(".wrap").show();
                    $(".rejectComment").show();
                    loadingSuccess();

                    var HDimgurl = api.resource.getViewpointSnapshot(annotation.ID);
                    addNewCommentModel.BIMElements.push({
                        Id: "0",
                        BIMElementType: "0",
                        IsDelete: "0",
                        BIMId: annotation.ID,
                        BimThumb: annotation.Snapshot,
                        HDBimThumbUrl: HDimgurl
                    });
                });
            });
        });

        //添加构件
        $("#addStructure").click(function () {
            //更换右上角button
            html = $("#statusbox").html();
            console.log(html);
            $("#statusbox").html("<div id = 'confirmAddStructure'>确认选择</div>");
            //关掉新建意见的弹框
            $('#add-comment-cancle').click();
            alert("请在模型操作界面选择构件，然后按右上角的确认选择");
        });

        //驳回时添加构件
        $("#addRejectStructure").click(function () {
            //更换右上角button
            html = $("#statusbox").html();
            $("#statusbox").html("<div id = 'confirmAddRejectStructure'>确认选择</div>");
            //关掉新建意见的弹框
            $('#add-comment-cancle').click();
            alert("请在模型操作界面选择构件，然后按右上角的确认选择");
        });


        //确认选择构件
        $("#statusbox").on("click", "#confirmAddStructure", function () {
            //更换右上角button
            $("#statusbox").html(html);

            //当前选择的构件
            var selections = api.selector.collections;
            if (selections.length == 0) {
                alert("请选择构件");
            }
            //找到构件的名字
            var modelId = selections[0].split('^')[0];
            var strutureId = selections[0].split('^')[1];

            var items = api.resource.modelStructure.get(modelId).file[0];
            var name = getStructureName(strutureId, items);
            //构件加入弹框
            var _html = '<li class="linkLi"><span> <a href="javascript:void(0);" onclick="viewStructure(\'' + selections[0] + '\');">' + strutureId + name + '</a></span><i class="iconfont icon-lianjie"></i><img src="/Content/image/ICON_DELETE.png" alt="" class="delete"></li>';
            window.parent.$(_html).insertBefore('#addStructure');
            addNewCommentModel.BIMElements.push({
                Id: "0",
                BIMElementType: "1",
                BIMId: selections[0],
                Name: strutureId + name
            });

            //打开弹框
            $(".wrap").show();
            $(".newComment").show();
        });

        //驳回时确认选择构件
        $("#statusbox").on("click", "#confirmAddRejectStructure", function () {
            //更换右上角button
            $("#statusbox").html(html);

            //当前选择的构件
            var selections = api.selector.collections;
            if (selections.length == 0) {
                alert("请选择构件");
            }

            //找到构件的名字
            var modelId = selections[0].split('^')[0];
            var strutureId = selections[0].split('^')[1];

            var items = api.resource.modelStructure.get(modelId).file[0];
            var name = getStructureName(strutureId, items);

            //构件加入弹框
            var _html = '<li class="linkLi"><span> <a href="javascript:void(0);" onclick="viewStructure(\'' + selections[0] + '\');">' + strutureId + name + '</a></span><i class="iconfont icon-lianjie"></i><img src="/Content/image/ICON_DELETE.png" alt="" class="delete"></li>';
            window.parent.$(_html).insertBefore('#addRejectStructure');
            addNewCommentModel.BIMElements.push({
                Id: "0",
                BIMElementType: "1",
                BIMId: selections[0],
                Name: strutureId + name
            });

            //打开弹框
            $(".wrap").show();
            $(".rejectComment").show();
        });

        //递归函数，是用来找构件名称
        function getStructureName(strutureId, items) {
            if (items.Iselem) {
                if (items.id == strutureId)
                    return items.text;
                else
                    return "";
            }
            else {
                var result = "";
                for (var i = 0; i < items.children.length; i++) {
                    result = getStructureName(strutureId, items.children[i]);
                    if (result != "") {
                        return result;
                    }
                }
                return result;
            }
        }

        //定位到批注
        function viewAnnotation(id) {
            $('#add-comment-cancle').click();
            window.BIMe.view.BIMeAnnotation.showAnnotation(id);
        }

        //定位到构件
        function viewStructure(id) {
            $('#add-comment-cancle').click();
            api.zoomService.fitById(id);
        }

    </script>

    <!--页面动效-->
    <script>
        $(function () {
            var height =  $(document).innerHeight()-89;
            var viewheight =  $(document).innerHeight()-161;
            $(".view-lists-iterm").height(viewheight);
            $(".model-tree-hide").height(height);
            $(".viewlistBox").height(height);
            $(".menu-bar").height(height);
            $("#bimiframe").height($(document).innerHeight()-120);

            //左侧菜单栏
            $(".menu-classification li").click(function() {
                $(this).addClass("active").siblings().removeClass("active");
                var index = $(this).index();
                $(".menu-content").eq(index).addClass("active").siblings().removeClass("active");
            });
            //视点
            $("body").on("click",".form-group .select-control",function(e){
                e.stopPropagation();
                var selectLists = $(this).parent().siblings(".select-lists");
                if(selectLists.hasClass("active")) {
                    selectLists.removeClass("active");
                } else {
                    $(".select-lists").removeClass("active");
                    selectLists.addClass("active");
                }
            });
            $("body").on("click",".select-lists li",function(e) {
                e.stopPropagation();
                var html = $(this).html();
                $(this).parent().parent().siblings(".form-controls").find(".select-input").val(html);
                $(this).parent().parent().siblings(".form-controls").find(".select-input").text(html);
                $(".select-lists").removeClass("active");
            });
            //新增视点
            $(".menu-bar").on("click",".point-view .increase", function() {
                popUpEle(".increase-point-view");
            });

            //自由拖拽底部工具栏
            //var toolbar=$(".ui-toolbar");
            //toolbar.mousedown(function(event) {
            //    var event=event||window.event;
            //    var pageX=event.pageX||event.clientX+document.documentElement.scrollLeft;
            //    var pageY=event.pageY||event.clientY+document.documentElement.scrollTop;
            //    var boxx=pageX-parseInt(toolbar.css("left"));
            //    var boxy=pageY-parseInt(toolbar.css("top"));
            //    $(document).mousemove(function(event) {
            //        var event=event||window.event;
            //        var pageX=event.pageX||event.clientX+document.documentElement.scrollLeft;
            //        var pageY=event.pageY||event.clientY+document.documentElement.scrollTop;
            //        var left=pageX-boxx;
            //        var top1=pageY-boxy;
            //        toolbar.css("left",left);
            //        toolbar.css("top",top1);
            //        //清理选中的文字
            //        window.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();
            //    });
            //});
            //$(document).mouseup(function(){
            //    $(document).off('mousemove');
            //});

            //底部菜单栏 
            $(".ui-toolbar .toolbarLi .ui-button").click(function(e) {
                e.stopPropagation();

                if(!$(this).siblings(".icon").hasClass("active")){
                    return false;
                }

                var uiMenuList = $(this).siblings(".ui-menu-list");
                $(this).parent().siblings().find(".ui-menu-list").removeClass("active");
                if(uiMenuList.hasClass("active")) {
                    uiMenuList.removeClass("active");
                } else {
                    uiMenuList.addClass("active");
                }
            });

            $(document).click(function() {
                $(".ui-menu-list").removeClass("active");
            });

            //收起
            $(".menu-bar .pack-up").click(function() {
                $(".menu-classification li").removeClass("active");
                $(".menu-content").removeClass("active");
            });

            //意见卡片
            $(".model-header").on("click", ".topName", function (e) {
                e.stopPropagation();
                var dropDownBox = $(".user-dropDown-box");
                var personalName = $(".topName i");
                if (dropDownBox.hasClass("active")) {
                    dropDownBox.removeClass("active");
                    personalName.css("color", "#fff");
                } else {
                    dropDownBox.addClass("active");
                    personalName.css("color", "#094C82");
                }
            });

            $(".viewlistBox li").hover(function () {
                $(this).stop().animate({ top: "-2px" }).addClass("show-shadow");
            },
                function () {
                    $(this).stop().animate({ top: "0px" }).removeClass("show-shadow");
                });

            $("#opinion-type-select").change(function () {
                var options = $("#opinion-type-select option:selected"); //获取选中的项
                if (options.val() == "opt3") {
                    $(".depth").show();
                } else {
                    $(".depth").hide();
                }
            });

            //删除标注
            $(".model-mark").on("click", ".delete", function () {
                var li = $(this).parent();
                for (var i = 0; i < addNewCommentModel.BIMElements.length; i++) {
                    if ($('#commentId').val() == 0 && addNewCommentModel.BIMElements[i].Id == li[0].id) {
                        addNewCommentModel.BIMElements.splice(i, 1);
                        break;
                    }
                    if ($('#commentId').val() != 0 && addNewCommentModel.BIMElements[i].Id == li[0].id) {
                        addNewCommentModel.BIMElements[i].IsDelete = 1;
                        break;
                    }
                }
                li.remove();
                window.BIMe.view.BIMeAnnotation.deleteAnnotation(Id);
            });

            //删除构件
            $(".component-link").on("click", ".delete", function () {
                var li = $(this).parent();
                for (var i = 0; i < addNewCommentModel.BIMElements.length; i++) {
                    if ($('#commentId').val() == 0 && addNewCommentModel.BIMElements[i].Id == li[0].id) {
                        addNewCommentModel.BIMElements.splice(i, 1);
                        break;
                    }
                    if ($('#commentId').val() != 0 && addNewCommentModel.BIMElements[i].Id == li[0].id) {
                        addNewCommentModel.BIMElements[i].IsDelete = 1;
                        break;
                    }
                }
                li.remove();
            });

            //新建意见弹框
            $("#statusbox").on("click", ".new-opinion", function () {
                $(".wrap").show();
                $(".newComment").show();
            });

            //新建意见弹框
            $("#statusbox").on("click", ".new-integrality-opinion", function () {
                $(".wrap").show();
                $(".newComment").show();
            });

            //继续编辑新建意见的弹框
            $("#statusbox").on("click", "#continueEditComment", function () {
                $(".wrap").show();
                $(".newComment").show();
            });

            //取消
            $(".confirm-box .cancle-btn, .new-opinion-content .close-icon").click(function () {
                $(".wrap").hide();
                $(".newComment").hide();
                $(".rejectComment").hide();
                //$("#statusbox").html(html);
            });

            //切换构件和源
            $(".tabs-content .top-tab div").click(function () {
                $(this).addClass("active").siblings().removeClass("active");
                var index = $(this).index();
                $(".component-con").eq(index).addClass("active").siblings().removeClass("active");
            });

            //展开模型树与属性
            $(".show-model-tree").click(function () {
                $(".model-tree-box").hide();
                $(".model-tree-hide").animate({
                    width: "386px"
                },
                    500);
            });

            $(".model-tree-hide .tabs li").click(function () {
                if ($(this).hasClass("active")) {
                    $(".model-tree-box").show();
                    $(".model-tree-hide").animate({
                        width: "0px"
                    },
                        500);
                }
                $(this).addClass("active").siblings().removeClass("active");
            });

            //收起
            $(".packUp").click(function () {
                $(".model-tree-box").show();
                $(".model-tree-hide").animate({
                    width: "0px"
                },
                    500);
            });

            //展开收起意见列表
            $(".spread-btn .show-view-card").click(function() {
                $(".viewlistBox").animate({
                    width:"400px"
                },500);
                $(".view-lists-iterm").css("overflow-y","auto");
                $(".spread-btn").hide();
            });
            $(".viewlistBox .operatorBtn").click(function() {
                /* if($(this).hasClass("active")) {
                     $(this).removeClass("active");
                     $(".viewlistBox").animate({
                         width:"40px"
                     },500);
                     $(".view-lists-iterm").css("overflow-y","hidden");
                 } else {
                     $(this).addClass("active");
                     $(".viewlistBox").animate({
                         width:"400px"
                     },500);
                     $(".view-lists-iterm").css("overflow-y","auto");
                 }*/
                $(".viewlistBox").animate({
                    width:"0px"
                },500);
                $(".view-lists-iterm").css("overflow-y","hidden");
                $(".spread-btn").show();
            });

            //$(".rejectComment .inputBox textarea").on("input",
            //    function () {
            //        var length = this.value.length;
            //        if (length > 200) {
            //            $(".words span").css("color", " #FF0000");
            //            this.value = this.value.slice(0, 200);
            //        } else {
            //            $(".words span").html(length);
            //        }
            //    });

            //意见卡片展开
            $(".model-box").on("click",".view-show .view", function() {
                $(this).parents(".view-show").hide();
                $(this).parents(".view-show").siblings(".comment-card-spread").slideDown("slow");
            });

            //意见卡片收起
            $(".model-box").on("click", ".comment-card-spread .view", function() {
                $(this).parents(".comment-card-spread").slideUp();
                $(this).parents(".comment-card-spread").siblings(".view-show").show();
            });

        });

    </script>

    <!--视点栏-->
    <script>
        $(function() {
            $('#model-viewPoint-tab').click(function() {
                window.BIMe.logicData.BIMeLogicData.getViewpoints(viewId).then(function(res) {
                    $('#viewPoints').empty();
                    for (var i ; i < res.length; i++) {
                        if (res[i].Type == 0) {
                            var item = '<tr><td><input type="checkbox"></td><td>'+ '缩略图' + '</td><td>'+ res[i].Name +'</td><td>hcndk</td></tr>';
                            $('#viewPoints').append(item);
                        }
                    }
                });
            });
        })
    </script>

    <!--全局事件-->
    <script>
        var bimProjectId = "@Model.ProjectGuid";
        var bimModelId = "@Model.ModelGuid";
        var viewId = "308793";
        var versionNoId = "0";

        function showToolBars() {
            window.BIMe.event.BIMeEvent.isHideLeftToolbar(false);
            window.BIMe.event.BIMeEvent.isHideViewToolbar(false);
            window.BIMe.event.BIMeEvent.isHideRightSpaceTree(false);
        }

        function hideToolBars() {
            window.BIMe.event.BIMeEvent.isHideLeftToolbar(true);
            window.BIMe.event.BIMeEvent.isHideViewToolbar(true);
            window.BIMe.event.BIMeEvent.isHideRightSpaceTree(true);
        }

        loading();

        window.onload = function() {
            InitialPage();
            //console.log(window.BIMe.event.BIMeEvent.finishRender);
            //console.log(window.BIMe.event.BIMeEvent.finishImageMarkup);
            window.BIMe.event.BIMeEvent.finishRender.subscribe(function(res) {

                //加载模型树
                window.BIMe.logicData.BIMeLogicData.getModelTree(bimModelId, versionNoId).then(function(modelTree){
                    if(modelTree.Status != 200){
                        errPromot("获取模型构造树失败");
                        return false;
                    }else{
                        var htmlStr = SetModelTreeHtml(modelTree.Data.file);
                        $(".model-tree-content").empty().append(htmlStr);
                        loadingSuccess();
                    }
                });

                //载入页面后看看是否要跳转批注
                @if (Model.TargetAnnotationId != "")
                {
                    <text>
                viewAnnotation('@Model.TargetAnnotationId');
                </text>
                }
            });

            window.BIMe.event.BIMeEvent.selectorEvent.subscribe(function(ids) {
                RefreshElemProperty(ids[ids.length - 1]);
            });
        }

        function InitialPage() {
            $('#modelprofession').val(@Model.CurrentProfessionId);
            getCommentsData();
            getOperationButton();
        };

        //更改专业
        $('#modelprofession').change(function() {
            //获取活动角色
            getAvailableRoles();
            //重新获取数据
            getCommentsData();
            //重新纪录角色id
            getOperationButton();
            //清除模态框
            cleanContentBox();
        });

        //更改角色
        $('#activityRoles').change(function() {
            addNewCommentModel.RoleId = $('#activityRoles').val();
            searchCommentsData.roleId = $('#activityRoles').val();

            //重新获取数据
            getCommentsData();
            //重新纪录角色id
            getOperationButton();
            //清除模态框
            cleanContentBox();
        });

        //载入页面后看看是否要开始修改意见
        @if (Model.CommentId != 0)
            {
                <text>
        UpdateCommentPopUp(@Model.CommentId);
        </text>
            }

        function GetElementId(id){
            return bimModelId + "^" + id;
        }
    </script>

    <!--模型树功能-->
    <script>
        $(".menu-bar").on("contextmenu",".menu-detail",function(e){
            e.preventDefault();
        });
        $(document).click(function(){
            $(".model-tree-content .operation").remove();
        });

        $(".model-tree-content").on("click",".operation .btn-operation",function(){
            var nodeId = $(this).parent().parent().attr("data-id");
            var type = $(this).attr("data-type");
            if(type == "hide"){
                window.BIMe.control.BIMeHide.hideElementByElmentId(GetElementId(nodeId), false);
            }else if(type == "show"){
                window.BIMe.control.BIMeHide.removeHideElementByElementId(GetElementId(nodeId));
            }else if(type == "isolate"){
                window.BIMe.control.BIMeIsolate.isolateElementByElementId(GetElementId(nodeId));
            }
        });

        var modelTreeDbclickTime = null;
        $(".menu-bar").on("mousedown",".menu-detail",function (e) {
            if(e.button == 2){
                $(".operation").remove();
                var html = '<div class="operation"><div data-type="hide" class="btn-operation">隐藏对象</div><div data-type="show" class="btn-operation">显示对象</div><div data-type="isolate" class="btn-operation">隔离对象</div></div>';
                $(this).append(html);
            }else if(e.button == 0){
                window.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();
                var $that = $(this);
                clearTimeout(modelTreeDbclickTime);
                modelTreeDbclickTime = setTimeout(function(){
                    var id = $that.attr("data-id");
                    RefreshElemProperty(GetElementId(id));

                    var ul = $that.siblings("ul");
                    if (ul.length != 0) {
                        if (ul.hasClass("active")) {
                            $that.removeClass("active");
                            ul.removeClass("active");
                        } else {
                            $that.addClass("active");
                            ul.addClass("active");
                        }
                    } else {
                        return;
                    }
                },300);
            }
        });

        $(".menu-bar").on("dblclick",".menu-detail",function () {
            window.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();
            clearTimeout(modelTreeDbclickTime);
            var nodeId = $(this).attr("data-id");
            window.BIMe.control.BIMeZoom.zoomElementByElementId(GetElementId(nodeId));
        });

        function SetModelTreeHtml(data){
            var first = data[0];

            var treeHtml = '<ul>';
            treeHtml += '<li class="firstli">';
            treeHtml += '<div data-id="' + first.id + '" class="menu-detail first-level">';
            treeHtml += '<span class="triangle">';
            treeHtml += '<i class="iconfont icon-arrLeft-fill"></i>';
            treeHtml += '</span>';
            treeHtml += '<span class="icon"></span>';
            treeHtml += '<span class="model-tree">' + first.text + '</span>';
            treeHtml += '</div>';

            if(!first.Iselem){
                treeHtml += AddModelTreeNode(first.children);
            }

            treeHtml += '</li>';
            treeHtml += '</ul>';

            return treeHtml;
        }

        function AddModelTreeNode(list){

            var listHtml = '<ul>';

            for(var i in list){
                listHtml += '<li>';
                listHtml += '<div data-id="' + list[i].id + '" class="menu-detail">';

                if(!list[i].Iselem){
                    listHtml += '<span class="triangle">';
                    listHtml += '<i class="iconfont icon-arrLeft-fill"></i>';
                    listHtml += '</span>';
                }else{
                    listHtml += '<span class="triangle">';
                    listHtml += '</span>';
                }

                listHtml += '<span class="icon"></span>';
                listHtml += '<span class="model-tree">' + list[i].text + '</span>';
                listHtml += '</div>';

                if(!list[i].Iselem){
                    listHtml += AddModelTreeNode(list[i].children);
                }

                listHtml += '</li>';
            }

            listHtml += '</ul>';

            return listHtml;
        }

        function RefreshElemProperty(id){
            window.BIMe.logicData.BIMeLogicData.getElementProperty(id).then(function(elementDataArray){
                var htmlStr = "";
                for(var i in elementDataArray){
                    htmlStr += '<tr>';
                    htmlStr += '<td>' + elementDataArray[i].Name + '</td>';
                    htmlStr += '<td>' + elementDataArray[i].Value + '</td>';
                    htmlStr += '</tr>';
                }
                $("#element-property-content").empty().append(htmlStr);
            });
        }
    </script>
    <!--底部按钮-->
    <script>
        $(function(){
            $(".ui-toolbar").on("click",".btn-bim-botton",function(){
                var $that = $(this);
                var type = $that.attr("data-type");
                var typeArray = [
                    "sectioning-on-off",
                    "sectioning-reset",
                    "sectioning-hide",
                    "sectioning-select", 
                    "roam-on-off", 
                    "roam-gravity",
                    "roam-collide",   
                    "measure-on-off",     
                ];
                if(type == typeArray[0] || type == typeArray[4] || type == typeArray[7]){
                    if($that.hasClass("active")){
                        $that.removeClass("active");
                    }else{
                        $that.addClass("active");
                    }
                }

                if($that.hasClass("disabled"))
                    return false;

                switch(type){
                    case typeArray[0]:
                        if($that.hasClass("active")){
                            window.BIMe.control.BIMeUtility.activeSelection();
                        }else{
                            window.BIMe.control.BIMeUtility.deActiveSelection();
                        }
                        break;
                    case typeArray[1]:
                        window.BIMe.control.BIMeUtility.resetClipperBox();
                        break;
                    case typeArray[2]:
                        var text = $that.find("span").text();
                        if(text == "隐藏剖切框"){
                            $that.find("span").text("显示剖切框");
                            window.BIMe.control.BIMeUtility.hideSelection();
                        }else{
                            $that.find("span").text("隐藏剖切框");
                            window.BIMe.control.BIMeUtility.showSelection();                         
                        }
                        break;
                    case typeArray[3]:
                        if($that.find("input").prop("checked")){
                            window.BIMe.control.BIMeUtility.clipByPickPlane();
                            $(".sectioning-reset, .sectioning-hide").addClass("disabled");
                        }else{
                            //此处通过再次调用来启动和关闭选择剖切面，但是切换过快会导致相应的问题，需要BIM提供关闭选择剖切面接口
                            window.BIMe.control.BIMeUtility.clipByPickPlane();
                            $(".sectioning-reset, .sectioning-hide").removeClass("disabled");
                            //window.BIMe.control.BIMeUtility.deClipByPickPlane();                           
                        }
                        break;
                    case typeArray[4]:
                        if($that.hasClass("active")){
                            window.BIMe.control.BIMeUtility.activeNavigation();
                        }else{
                            window.BIMe.control.BIMeUtility.deActiveNavigation();
                        }
                        break;
                    case typeArray[5]:
                        if($that.find("input").prop("checked")){
                            window.BIMe.control.BIMeUtility.activeGravity();
                        }else{
                            window.BIMe.control.BIMeUtility.deActiveGravity();
                        }
                        break;
                    case typeArray[6]:
                        if($that.find("input").prop("checked")){
                            window.BIMe.control.BIMeUtility.activeCollision();
                        }else{
                            window.BIMe.control.BIMeUtility.deActiveCollision();
                        }
                        break;
                    case typeArray[7]:
                        if($that.hasClass("active")){
                            window.BIMe.control.BIMeUtility.activeMeasure();
                        }else{
                            window.BIMe.control.BIMeUtility.deActiveMeasure();
                        }
                        break;
                }
            });        
        })
    </script>
</body>
</html>